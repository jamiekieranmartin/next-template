datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator js {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.VarChar(2000)
  refresh_token_expires_in Int?
  access_token             String? @db.VarChar(2000)
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.VarChar(2000)
  session_state            String? @db.VarChar(2000)
  oauth_token_secret       String? @db.VarChar(2000)
  oauth_token              String? @db.VarChar(2000)
  user                     User    @relation(fields: [userId], references: [id], onUpdate: NoAction)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onUpdate: NoAction)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  image         String?

  accounts     Account[]
  sessions     Session[]
  team_members TeamMember[]

  @@index([id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Team {
  id     String @id @default(cuid())
  domain String @unique
  name   String @db.VarChar(255)

  members        TeamMember[]
  stripe_account StripeAccount?

  @@index([id])
  @@index([domain])
}

enum MemberRole {
  MEMBER
  OWNER
}

model TeamMember {
  user_id String
  team_id String

  accepted Boolean    @default(false)
  role     MemberRole @default(MEMBER)

  user User @relation(fields: [user_id], references: [id], onUpdate: NoAction)
  team Team @relation(fields: [team_id], references: [id], onUpdate: NoAction)

  @@id([user_id, team_id])
  @@index([user_id, team_id])
}

model StripeAccount {
  id               String  @id @default(cuid())
  stripe_id        String  @unique
  default_currency String  @default("aud")
  charges_enabled  Boolean @default(false)
  payouts_enabled  Boolean @default(false)

  team_id String @unique

  team Team @relation(fields: [team_id], references: [id], onUpdate: NoAction)

  @@index([id])
  @@index([stripe_id])
}
